ircd_lexer_src = flex_gen.process('ircd_lexer.l')
ircd_parser_src = bison_gen.process('ircd_parser.y')

ircd_version_c = custom_target(
  'version.c',
  input: 'version.c.SH',
  output: 'version.c',
  command: ['sh', '@INPUT@', '@OUTPUT@']
)

ircd_lib = shared_library('ircd',
  'authproc.c',
  'bandbi.c',
  'cache.c',
  'capability.c',
  'channel.c',
  'channel_access.c',
  'chmode.c',
  'class.c',
  'client.c',
  'dns.c',
  'extban.c',
  'getopt.c',
  'hash.c',
  'hook.c',
  'hostmask.c',
  'ircd.c',
  'ircd_signal.c',
  'listener.c',
  'logger.c',
  'match.c',
  'modules.c',
  'monitor.c',
  'msgbuf.c',
  'newconf.c',
  'operhash.c',
  'packet.c',
  'parse.c',
  'privilege.c',
  'propertyset.c',
  'ratelimit.c',
  'reject.c',
  'restart.c',
  's_conf.c',
  's_newconf.c',
  's_serv.c',
  's_user.c',
  'scache.c',
  'send.c',
  'snomask.c',
  'sslproc.c',
  'substitution.c',
  'supported.c',
  'tgchange.c',
  'whowas.c',
  'wsproc.c',
  serno_h,
  ircd_version_c,
  ircd_lexer_src,
  ircd_parser_src,
  dependencies: [libcrypto_dep, libdl_dep],
  include_directories: [librb_inc, base_inc],
  install: true,
  link_with: [librb_lib])

ircd_exe = executable(meson.project_name(),
  'main.c',
  include_directories: [librb_inc, base_inc],
  install: true,
  install_rpath: get_option('libdir'),
  link_with: [librb_lib, ircd_lib])
